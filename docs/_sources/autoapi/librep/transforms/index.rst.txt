:py:mod:`librep.transforms`
===========================

.. py:module:: librep.transforms


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   autocorrelation/index.rst
   fft/index.rst
   resampler/index.rst
   spectrogram/index.rst
   stats/index.rst
   umap/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   librep.transforms.AutoCorrelation
   librep.transforms.FFT
   librep.transforms.InvertibleTransform
   librep.transforms.SimpleResampler
   librep.transforms.StatsTransform
   librep.transforms.Transform
   librep.transforms.Transform
   librep.transforms.Transform




Attributes
~~~~~~~~~~

.. autoapisummary::

   librep.transforms.ArrayLike
   librep.transforms.ArrayLike
   librep.transforms.ArrayLike
   librep.transforms.ArrayLike
   librep.transforms.UMAP


.. py:data:: ArrayLike
   

   

.. py:data:: ArrayLike
   

   

.. py:data:: ArrayLike
   

   

.. py:data:: ArrayLike
   

   

.. py:class:: AutoCorrelation(mode = 'full')

   Bases: :py:obj:`librep.base.transform.Transform`

   .. py:method:: fit(X, y = None)


   .. py:method:: transform(X)



.. py:class:: FFT(transpose = False, absolute = True, centered = False)

   Bases: :py:obj:`librep.base.transform.InvertibleTransform`

   Performs the DFT at one sample.

   Parameters
   ----------
   transpose : bool
       Description of parameter `transpose` (the default is False).
   absolute : bool
       Description of parameter `absolute` (the default is True).
   centered : bool
       Description of parameter `centered` (the default is False).

   Attributes
   ----------
   transpose
   absolute
   centered

   Example
   --------
   >>> FFT()


   .. py:method:: fit(X, y = None)


   .. py:method:: inverse_transform(X)


   .. py:method:: transform(X)

      Transform a sample using FFT.

      Parameters
      ----------
      X : ArrayLike
          Description of parameter `X`.

      Returns
      -------
      type
          Description of returned object.

      Raises
      ------
      ExceptionName
          Why the exception is raised.




.. py:class:: InvertibleTransform

   Bases: :py:obj:`Transform`

   .. py:method:: inverse_transform(X)
      :abstractmethod:



.. py:class:: SimpleResampler(new_sample_size)

   Bases: :py:obj:`librep.base.transform.Transform`

   .. py:method:: fit(X, y)


   .. py:method:: transform(X)



.. py:class:: StatsTransform(keep_values = False, capture_statistical = True, capture_indices = True)

   Bases: :py:obj:`librep.base.transform.Transform`

   .. py:method:: fit(X, y)


   .. py:method:: transform(X)



.. py:class:: Transform

   Bases: :py:obj:`librep.base.parametrizable.Parametrizable`

   .. py:method:: fit(X, y = None, **fit_params)
      :abstractmethod:


   .. py:method:: fit_transform(X, y = None, **fit_params)


   .. py:method:: transform(X)
      :abstractmethod:



.. py:class:: Transform

   Bases: :py:obj:`librep.base.parametrizable.Parametrizable`

   .. py:method:: fit(X, y = None, **fit_params)
      :abstractmethod:


   .. py:method:: fit_transform(X, y = None, **fit_params)


   .. py:method:: transform(X)
      :abstractmethod:



.. py:class:: Transform

   Bases: :py:obj:`librep.base.parametrizable.Parametrizable`

   .. py:method:: fit(X, y = None, **fit_params)
      :abstractmethod:


   .. py:method:: fit_transform(X, y = None, **fit_params)


   .. py:method:: transform(X)
      :abstractmethod:



.. py:data:: UMAP
   

   

